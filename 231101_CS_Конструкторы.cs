using System;

namespace _231101_CS_Конструкторы
{
    // три типа конструкторов:
    // 1) конструктор по умолчанию
    // для классов его переопределить можно (в отличие от структур)
    // 2) конструктор с параметрами
    // 3) статический конструктор (с ключевым словом static)
    // все конструкторы должны иметь модификаторы доступа public (иначе по умолчанию он private)
    // конструктор не имеет возвращаемого типа
    // конструктор по умолчанию может быть только один

    class Car
    {
        public string _ownerName;
        public int _score = 10;
        static int count;

        static Car()

        //конструктор по умолчанию
        public Car()
        {
            _ownerName = "Ivan Ivanov";

        
        }
        public void PrintState()
        {
            Console.WriteLine($"Машина принадлежит {_ownerName}.") ;
        
        }
        public void Increase()
        { }




        // конструкторы можно перегружать

        // конструктор по умолчанию не принмает параметры, не может быть перегружен
        // и создается автоматом, если ку класса нет др конструкторов

        // конструктор с параметрами может быть перегружен сколько угодно раз
        // оба этих конструктора требуют модификаторы доступа public

        // статический конструктор может быть только один
        // он не может иметь модификаторы доступа и не может приниматт параметры
        // выполняется только один раз, независимо от кол-ва ceo объектов класса
        // он вызывается до первого обращения к данному классу
        // обычно перед первым вызовом любого члена класса
        // не может быть вызваннепосредственно в коде
        // вызывается исполняющей средой при загрузке класса
        // имеет доступ только к статическим членам класса


        // ========================= ключевое слово this ===================================

        class Student
        {
            string firstName;
            public void SetName(string firstName)
            {
                this.firstName = firstName;
            
            }
        
        }
        // дилегирование через this  в Car



        // в c# нет функций, только методы

        // всё что структуры - значимое
        // всё что классы - ссылочное

        // return - метод как в с++
        // если метод ничего не возвращает

        //перегрузка методов одинаковое название mathematics

    }


    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
        }
    }
}
